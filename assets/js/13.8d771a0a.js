(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{220:function(a,r,t){"use strict";t.r(r);var e=t(2),v=Object(e.a)({},function(){var a=this,r=a.$createElement,t=a._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"框架设计原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#框架设计原则","aria-hidden":"true"}},[a._v("#")]),a._v(" 框架设计原则")]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"编写框架的初心"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写框架的初心","aria-hidden":"true"}},[a._v("#")]),a._v(" 编写框架的初心")]),a._v(" "),t("p",[a._v("造轮子才能够成长的更快，虽然现在php主流框架很多，如果按照我现在自身的能力，想要打造一款稳定并且性能优越的框架难于上青天，因此，写在前面的是，该框架适合初中级学习PHP的面向对象以及熟悉现代化PHP的开发，毕竟有很多工作了多年的PHPER,连composer或者框架某个组件的实现原理都不懂，最要命的是，之前在v2上看到一个四五年工作经验的在问链式调用是怎么实现的，实在是非常不应该了。")]),a._v(" "),t("h2",{attrs:{id:"编写框架遵循的几个原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写框架遵循的几个原则","aria-hidden":"true"}},[a._v("#")]),a._v(" 编写框架遵循的几个原则")]),a._v(" "),t("p",[a._v("分享一下，写这个框架的时候，我踩的坑以及遵循的几个准则。如果跟着怎么开发这个框架的思路走，你能够学会使用composer以及组件的开发,单元测试，php对象以及了解设计模式")]),a._v(" "),t("h3",{attrs:{id:"必须使用composer来开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#必须使用composer来开发","aria-hidden":"true"}},[a._v("#")]),a._v(" 必须使用composer来开发")]),a._v(" "),t("p",[a._v("基于以下几个原因：")]),a._v(" "),t("ul",[t("li",[a._v("​不重复造轮子")]),a._v(" "),t("li",[a._v("​解决依赖的问题")]),a._v(" "),t("li",[a._v("重点：​compoesr提供了一种不允许修改的可能\n​改框架是忌讳，首先是​1. 不可维护，​2.升级咋个玩，你只能继承来实现你要个性化的地方，我不允许你个性化的地方你是必须遵循框架行为了")])]),a._v(" "),t("h3",{attrs:{id:"​只做一些必须处理的工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#​只做一些必须处理的工作","aria-hidden":"true"}},[a._v("#")]),a._v(" ​只做一些必须处理的工作")]),a._v(" "),t("ul",[t("li",[a._v("​例如异常处理，中间件，数组处理")]),a._v(" "),t("li",[a._v("规定好开发统一规范，以及约束一些必要的准则，例如控制器位置，路由文件\n​- 代码风格规范")]),a._v(" "),t("li",[a._v("错误处理规范")]),a._v(" "),t("li",[a._v("包管理")]),a._v(" "),t("li",[a._v("契约规范（接口）")]),a._v(" "),t("li",[a._v("单元测试规范")]),a._v(" "),t("li",[a._v("功能开发的流程规范")])]),a._v(" "),t("h3",{attrs:{id:"​其他的交给开发者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#​其他的交给开发者","aria-hidden":"true"}},[a._v("#")]),a._v(" ​其他的交给开发者")]),a._v(" "),t("ul",[t("li",[a._v("​使用composer来开发")]),a._v(" "),t("li",[a._v("​需要什么库自己引用，没有库就自己开发")]),a._v(" "),t("li",[a._v("​减少框架学习成本，​开发者不需要看繁杂的文档，需要使用啥自己引入库文件使用")])]),a._v(" "),t("h3",{attrs:{id:"​代码简单，可读性高，单文件代码量少"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#​代码简单，可读性高，单文件代码量少","aria-hidden":"true"}},[a._v("#")]),a._v(" ​代码简单，可读性高，单文件代码量少")]),a._v(" "),t("p",[a._v("​可快速给开发阅读整个框架源码并且可迭代升级，有利于框架的鲁棒性")]),a._v(" "),t("h3",{attrs:{id:"​尽量减少引入一些奇淫技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#​尽量减少引入一些奇淫技巧","aria-hidden":"true"}},[a._v("#")]),a._v(" ​尽量减少引入一些奇淫技巧")]),a._v(" "),t("ul",[t("li",[a._v("生僻函数的使用")]),a._v(" "),t("li",[a._v("​乱七八糟的设计模式")]),a._v(" "),t("li",[a._v("​复杂的写法")]),a._v(" "),t("li",[a._v("​当然laravel有些奇淫技巧可参考，比如pipline")])]),a._v(" "),t("h3",{attrs:{id:"​不引入一些全局变量跟常量还有不必要的全局方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#​不引入一些全局变量跟常量还有不必要的全局方法","aria-hidden":"true"}},[a._v("#")]),a._v(" ​不引入一些全局变量跟常量还有不必要的全局方法")]),a._v(" "),t("p",[a._v("​尽量限制到命名空间里边定义，防止变量污染以及版本升级带来的问题，例如laravel最近的一次merge,"),t("a",{attrs:{href:"https://github.com/laravel/framework/pull/26898",target:"_blank",rel:"noopener noreferrer"}},[a._v("Deprecate useless Arr and Str global helper methods "),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"​追求性能的极致体验"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#​追求性能的极致体验","aria-hidden":"true"}},[a._v("#")]),a._v(" ​追求性能的极致体验")]),a._v(" "),t("p",[a._v("经得起压测")]),a._v(" "),t("h3",{attrs:{id:"阅读其他框架源码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阅读其他框架源码","aria-hidden":"true"}},[a._v("#")]),a._v(" 阅读其他框架源码")]),a._v(" "),t("p",[a._v("​可阅读学习laravel以及slim框架源码，​当然也可看下tp，ci,yii，相互对比，才会有高低")])])},[],!1,null,null,null);r.default=v.exports}}]);